{"version":3,"sources":["components/GridVis/GridVis.js","components/MainContent/MainContent.js","components/SideContent/SideContent.js","components/Landing/Landing.js","App.js","serviceWorker.js","index.js"],"names":["GridVis","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","grid_array","Array","props","gridItems","items","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","_ref","k","_ref2","slicedToArray","v","item_styles","selectedGridItems","includes","gridColumn","concat","gridColsSpan","gridRow","gridRowSpan","push","react_default","a","createElement","className","style","onClick","e","handleGridClick","_iterator","entries","Symbol","iterator","next","done","err","return","styles","width","display","gridTemplateRows","gridRows","gridTemplateColumns","gridCols","gap","gridGap","padding","React","Component","MainContent","maxWidth","containerMaxWidth","GridVis_GridVis_GridVis","SideContent","event","item","target","validity","valid","parseInt","handleChange","handleReset","handleThemeChange","type","pattern","placeholder","onChange","length","darkMode","index_es","icon","solid_moon","outline_moon","faGithub","DEFAULTS","Landing","call","theme","window","localStorage","getItem","state","bind","assertThisInitialized","setState","defineProperty","idx","prev_selected","remove_idx","indexOf","splice","setItem","SideContent_SideContent_SideContent","MainContent_MainContent_MainContent","App","Landing_Landing_Landing","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.49be5d82.chunk.js","sourcesContent":["import React from 'react';\nimport './GridVis.css';\n\nexport class GridVis extends React.Component {\n  render() {\n    const grid_array = Array(this.props.gridItems || 0);\n    const items = [];\n\n    for (const [k, v] of grid_array.entries()) {\n      let item_styles = {};\n      if (this.props.selectedGridItems.includes(k)) {\n        item_styles = {\n          gridColumn: `span ${this.props.gridColsSpan || 1} / auto`,\n          gridRow: `span ${this.props.gridRowSpan || 1} / auto`\n        };\n      }\n      items.push(\n        <div\n          className={\n            'card grid-item ' +\n            (this.props.selectedGridItems.includes(k) ? 'active' : 'inactive')\n          }\n          key={k}\n          style={item_styles}\n          onClick={e => this.props.handleGridClick(e, k)}\n        >\n          <div className=\"card-content\">\n            <h3 className=\"subtitle\">\n              Item {k + 1}\n              {v}\n            </h3>\n          </div>\n        </div>\n      );\n    }\n\n    const styles = {\n      width: '100%',\n      display: 'grid',\n      gridTemplateRows: `repeat(${this.props.gridRows || 0}, 1fr)`,\n      gridTemplateColumns: `repeat(${this.props.gridCols || 0}, 1fr)`,\n      gap: `${this.props.gridGap}px ${this.props.gridGap}px `,\n      padding: '25px'\n    };\n\n    return <div style={styles}>{items}</div>;\n  }\n}\n","import React from 'react';\nimport './MainContent.css';\nimport { GridVis } from '../GridVis/GridVis';\n\nexport class MainContent extends React.Component {\n  render() {\n    return (\n      <div\n        className=\"main-container\"\n        style={{ maxWidth: this.props.containerMaxWidth || '100%' }}\n      >\n        <GridVis\n          gridItems={this.props.gridItems}\n          gridCols={this.props.gridCols}\n          gridRows={this.props.gridRows}\n          gridGap={this.props.gridGap}\n          gridColsSpan={this.props.gridColsSpan}\n          gridRowSpan={this.props.gridRowSpan}\n          handleGridClick={this.props.handleGridClick}\n          selectedGridItems={this.props.selectedGridItems}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './SideContent.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMoon as solid_moon } from '@fortawesome/free-solid-svg-icons';\nimport { faMoon as outline_moon } from '@fortawesome/free-regular-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nexport class SideContent extends React.Component {\n  handleChange(event, item) {\n    if (event.target.validity.valid) {\n      const value = parseInt(event.target.value);\n      this.props.handleChange(item, value);\n    }\n  }\n\n  handleReset(e) {\n    this.props.handleReset();\n  }\n\n  handleThemeChange(e) {\n    this.props.handleThemeChange();\n  }\n\n  render() {\n    return (\n      <div className=\"side-container\">\n        <h3 className=\"title\">CSS Grid Visualizer</h3>\n        <br />\n        <div className=\"field\">\n          <label className=\"label\">Grid Items</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              value={this.props.gridItems || 0}\n              placeholder=\"Enter a number\"\n              onChange={e => this.handleChange(e, 'gridItems')}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Grid Columns</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              value={this.props.gridCols || 0}\n              placeholder=\"Enter a number\"\n              onChange={e => this.handleChange(e, 'gridCols')}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Grid Gap (px)</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              value={this.props.gridGap || 0}\n              placeholder=\"Enter a number\"\n              onChange={e => this.handleChange(e, 'gridGap')}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Container Max Width (px)</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              value={this.props.containerMaxWidth || ''}\n              placeholder=\"Enter a number\"\n              onChange={e => this.handleChange(e, 'containerMaxWidth')}\n            />\n          </div>\n        </div>\n        {/* <label className=\"label\">Template</label>\n        <div className=\"select\">\n          <select>\n            <option>DEFAULT 3x3</option>\n            <option>4x4</option>\n            <option>Another one</option>\n            <option>Last one here</option>\n          </select>\n        </div> */}\n        <br />\n        <div\n          className={\n            'hidden-fields-container ' +\n            (this.props.selectedGridItems.length > 0 ? 'visible' : 'hidden')\n          }\n        >\n          <p className=\"subtitle\">Selected Item Properties</p>\n          <div className=\"field\">\n            <label className=\"label\">Grid Row Span</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                pattern=\"[0-9]*\"\n                value={this.props.gridRowSpan || 0}\n                placeholder=\"Enter a number\"\n                onChange={e => this.handleChange(e, 'gridRowSpan')}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Grid Column Span</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                pattern=\"[0-9]*\"\n                value={this.props.gridColsSpan || 0}\n                placeholder=\"Enter a number\"\n                onChange={e => this.handleChange(e, 'gridColsSpan')}\n              />\n            </div>\n          </div>\n        </div>\n\n        <button className=\"button is-primary is-fullwidth\">View Code</button>\n        <button\n          className={\n            'button is-outlined is-fullwidth ' +\n            (this.props.darkMode ? 'is-light' : '')\n          }\n          onClick={e => this.handleReset(e)}\n        >\n          Reset\n        </button>\n        <div className=\"options\">\n          <FontAwesomeIcon\n            icon={this.props.darkMode ? solid_moon : outline_moon}\n            className=\"icon\"\n            onClick={e => this.handleThemeChange(e)}\n          />\n          <FontAwesomeIcon icon={faGithub} className=\"icon\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { MainContent } from '../MainContent/MainContent';\nimport { SideContent } from '../SideContent/SideContent';\nimport './Landing.css';\nimport './Landing.sass';\n\nconst DEFAULTS = {\n  gridItems: 9,\n  gridCols: 3,\n  gridRows: 3,\n  gridGap: 10,\n  gridRowSpan: 1,\n  gridColsSpan: 1\n};\n\nexport class Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    const theme = window.localStorage.getItem('dark_theme') === 'true';\n    this.state = {\n      gridItems: DEFAULTS.gridItems,\n      gridCols: DEFAULTS.gridCols,\n      gridRows: DEFAULTS.gridRows,\n      gridGap: DEFAULTS.gridGap,\n      gridRowSpan: DEFAULTS.gridRowSpan,\n      gridColsSpan: DEFAULTS.gridColsSpan,\n      selectedGridItems: [],\n      darkMode: theme,\n      containerMaxWidth: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleGridClick = this.handleGridClick.bind(this);\n    this.handleThemeChange = this.handleThemeChange.bind(this);\n  }\n\n  handleChange(item, value) {\n    this.setState({ [item]: value });\n  }\n\n  handleReset() {\n    this.setState({\n      gridItems: DEFAULTS.gridItems,\n      gridCols: DEFAULTS.gridCols,\n      gridRows: DEFAULTS.gridRows,\n      gridGap: DEFAULTS.gridGap,\n      gridRowSpan: DEFAULTS.gridRowSpan,\n      gridColsSpan: DEFAULTS.gridColsSpan,\n      selectedGridItems: [],\n      containerMaxWidth: ''\n    });\n  }\n\n  handleGridClick(e, idx) {\n    const prev_selected = this.state.selectedGridItems;\n    if (prev_selected.includes(idx)) {\n      const remove_idx = prev_selected.indexOf(idx);\n      prev_selected.splice(remove_idx, 1);\n    } else {\n      prev_selected.push(idx);\n    }\n    this.setState({\n      selectedGridItems: prev_selected\n    });\n  }\n\n  handleThemeChange() {\n    localStorage.setItem('dark_theme', !this.state.darkMode);\n    this.setState({\n      darkMode: !this.state.darkMode\n    });\n  }\n\n  render() {\n    return (\n      <div\n        className={\n          'content-container ' + (this.state.darkMode ? 'dark-theme' : '')\n        }\n      >\n        <SideContent\n          handleChange={this.handleChange.bind(this)}\n          handleReset={this.handleReset.bind(this)}\n          gridItems={this.state.gridItems}\n          gridRows={this.state.gridRows}\n          gridCols={this.state.gridCols}\n          gridGap={this.state.gridGap}\n          gridRowSpan={this.state.gridRowSpan}\n          gridColsSpan={this.state.gridColsSpan}\n          selectedGridItems={this.state.selectedGridItems}\n          handleThemeChange={this.handleThemeChange.bind(this)}\n          darkMode={this.state.darkMode}\n          containerMaxWidth={this.state.containerMaxWidth}\n        />\n        <MainContent\n          gridItems={this.state.gridItems}\n          gridRows={this.state.gridRows}\n          gridCols={this.state.gridCols}\n          gridGap={this.state.gridGap}\n          gridRowSpan={this.state.gridRowSpan}\n          gridColsSpan={this.state.gridColsSpan}\n          containerMaxWidth={this.state.containerMaxWidth}\n          handleGridClick={this.handleGridClick.bind(this)}\n          selectedGridItems={this.state.selectedGridItems}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Landing } from './components/Landing/Landing';\nimport './App.sass';\n\nfunction App() {\n  return <Landing />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}